= 我的测试
:toc: right

== one

== 听我
想再次给大家说明一下模板管理中心的背景和意图，以及我的构思？
背景来自于海波的接口业务原子化，需要一个接口间相互调用的服务编排，以期待系统成熟后理想情况下对接一款新产品时候，只要开发人员配置一下对接的双方的接口报文，即可完成一款同类型新产品的上线。
所以模板管理就是为了这个报文转换的中间环节而产生的。不是为了中心存储模板而作的！

编排的过程中间需要一个相互调用的报文交换，服务A若想调用服务B提供的的功能,前提是服务B公开出来支持哪些功能以及功能的入参和出参！

一般的做法就是服务A来组织入参，然后用这些参数来转换成服务B的某个接口的入参;针对接口返回结果，失败时服务A以及处理，成功时服务A接到服务B的接口返回结果后转换成服务A能识别的报文来使用;  

这一次请求响应，涉及有两次报文转换:服务A->入参，出参->服务A能识别的结果！

那怎么来自动化这个过程呢？让我想到了电话交换机，小A想给小B打电话，那前提是小B需要公开他的电话号码给小A;然后小A拨电话号码，电话交换机收到号码后，开始[寻址定位]小B的线路，线路找到后，模数转换器把[语音]转成电信号，听电话时，数模转换器把电信号转成[语音]。

有此想到上面接口间的调用，可以借用[寻址]和[转换]两个类似点。为了做[寻址]，服务B必须公开(注册)它的各个功能点，寻址方式就是:服务名称B+功能点编号(必须注册，服务注册中心已经完成了此功能)。寻址到模板也就是电话线路通了。

为了调用功能点，服务A必须公开自己要传播的语音[入参]给转换器[模板]，转换器然后发给服务B的功能编号;返回的时候转换器再把服务B功能点[出参]转换成服务A要接收的报文。


